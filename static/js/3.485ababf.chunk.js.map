{"version":3,"sources":["assets/empty_cart.svg","components/EmptyCart.js","components/CardProductList.js","pages/Cart.js"],"names":["EmptyCart","props","useState","message","setMessage","useEffect","className","src","empty_cart_image","alt","to","CardProductList","product","setProduct","stock","productStock","setProductStock","showNotification","setshowNotification","carts","useContext","Cart","State","found_cart_product","find","cart_product","id","quantity","toggleNotification","formatNumber","Intl","NumberFormat","style","currency","name","onClick","picture","description","addQuantity","decreaseQuantity","removeFromCart","format","price","CartStore","cartDispacth","Dispatch","reduce","items","total","length","map","type","REMOVE_FROM_CART","payload","ADD_QUANTITY","DECREMENT_QUANTITY","RESET_CART"],"mappings":"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","file":"static/js/3.485ababf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/empty_cart.395cce9e.svg\";","import React, { useEffect, useState } from 'react'\nimport { NavLink } from 'react-router-dom';\n\nimport empty_cart_image from '../assets/empty_cart.svg'\n\nconst EmptyCart = (props) => {\n\tconst [message, setMessage] = useState('Your cart is empty.')\n\n\tuseEffect(() => {\n\t\tif (props.message) setMessage(props.message)\n\t}, [props.message])\n\n\treturn (\n\t\t<div className=\"empty-container\">\n\t\t\t<img src={ empty_cart_image } alt=\"Empty Cart\" className=\"h-48\"/>\n\t\t\t<p className=\"my-6 text-gray-500 font-bold\">{ message }</p>\n\t\t\t<NavLink to={'/'}>\n\t\t\t\t<button className=\"bg-yellow-400 hover:bg-yellow-500 text-white font-bold py-2 px-4 rounded\">\n\t\t\t\t\tShop Some Plants\n\t\t\t\t</button>\n\t\t\t</NavLink>\n\t\t</div>\n\t)\n}\n\nexport default EmptyCart","import React, { useEffect, useState, useContext } from 'react'\n\nimport { Cart } from \"../store/cart\"\n\nconst CardProductList = (props) => {\n\tconst [product, setProduct] = useState({})\n\tconst [productStock, setProductStock] = useState(product.stock)\n\tconst [showNotification, setshowNotification] = useState(false)\n\n\tconst carts = useContext(Cart.State)\n\n\tuseEffect(() => {\n\t\tif (props.product) setProduct(props.product)\n\t}, [props.product])\n\n\tuseEffect(() => {\n\t\tlet found_cart_product = carts.find(cart_product => cart_product.id === product.id)\n\n\t\tif (found_cart_product) setProductStock(product.stock - found_cart_product.quantity)\n\t\telse setProductStock(product.stock)\n\t}, [carts, product.stock, product.id])\n\n\tconst toggleNotification = () => {\n\t\tsetshowNotification(!showNotification)\n\t}\n\n\tconst formatNumber = new Intl.NumberFormat('id-ID', {\n\t\tstyle: 'currency',\n\t\tcurrency: 'IDR'\n\t})\n\n\tconst onAddQuantity = () => {\n\t\tif (productStock > 0) {\n\t\t\tprops.addQuantity()\n\t\t} else {\n\t\t\tif (!showNotification) toggleNotification()\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{showNotification ?\n\t\t\t\t<div className=\"fixed bottom-5 right-5 w-full px-6 py-3 shadow-2xl flex flex-col items-center border-t\n\t\t\tsm:w-auto sm:m-4 sm:rounded-lg sm:flex-row sm:border bg-red-600 border-red-600 text-white\">\n\t\t\t\t\t<div> Sorry, there are only {product.stock} items available for {product.name}.</div>\n\t\t\t\t\t<div className=\"flex mt-2 sm:mt-0 sm:ml-4\">\n\t\t\t\t\t\t<button className=\"px-3 py-2 hover:bg-red-700 transition ease-in-out duration-300\"\n\t\t\t\t\t\t\tonClick={toggleNotification}> Dismiss </button>\n\t\t\t\t\t</div>\n\t\t\t\t</div> : ''\n\t\t\t}\n\t\t\t<div className=\"flex justify-between bg-white rounded-lg p-4\">\n\t\t\t\t<div className=\"flex\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"h-24 w-24 rounded object-cover object-center\"\n\t\t\t\t\t\tsrc={product.picture}\n\t\t\t\t\t\talt={product.name}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"mx-4\">\n\t\t\t\t\t\t<h3 className=\"font-bold text-black\">{product.name}</h3>\n\t\t\t\t\t\t<p className=\"line-clamp-1\">{product.description}</p>\n\t\t\t\t\t\t<button className=\"text-blue-500\" onClick={onAddQuantity}>Add Qty</button> &nbsp; | &nbsp;\n\t\t\t\t\t\t<button className=\"text-blue-500\" onClick={props.decreaseQuantity}>Decrease Qty</button> &nbsp; | &nbsp;\n\t\t\t\t\t\t<button className=\"text-blue-500\" onClick={props.removeFromCart}>Remove from Cart</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-span-2 sm:col-span-1 xl:col-span-1 text-right\">\n\t\t\t\t\t<h1 className=\"text-indigo-500 text-md font-bold\">{formatNumber.format(product.price * product.quantity)}</h1>\n\t\t\t\t\t<h1 className=\"text-gray-500 text-xs font-semi-bold\">{formatNumber.format(product.price)} / Product</h1>\n\t\t\t\t\t{product.quantity ? <p className=\"italic\">x{product.quantity}</p> : ''}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default CardProductList","import { useContext } from 'react'\n\nimport {\n\tCart as CartStore,\n\tREMOVE_FROM_CART,\n\tADD_QUANTITY,\n\tDECREMENT_QUANTITY,\n\tRESET_CART\n} from \"../store/cart\"\n\nimport EmptyCart from '../components/EmptyCart'\nimport CardProductList from '../components/CardProductList'\n\nconst Cart = () => {\n\tconst carts = useContext(CartStore.State)\n\tconst cartDispacth = useContext(CartStore.Dispatch)\n\n\tconst { items, total } = carts.reduce(\n\t\t({ items, total }, { price, quantity }) => ({\n\t\t\titems: items + quantity,\n\t\t\ttotal: total + quantity * price\n\t\t}),\n\t\t{ items: 0, total: 0 }\n\t)\n\n\tconst formatNumber = new Intl.NumberFormat('id-ID', {\n\t\tstyle: 'currency',\n\t\tcurrency: 'IDR'\n\t})\n\n\treturn (\n\t\t<>\n\t\t\t{\n\t\t\t\tcarts.length > 0 ?\n\t\t\t\t\t<div className=\"pt-24 px-8 pb-8\">\n\t\t\t\t\t\t<h1 className=\"font-semibold text-xl mb-4 text-black text-opacity-50\">Carts</h1>\n\t\t\t\t\t\t<div className=\"grid grid-flow-row gap-4\">\n\t\t\t\t\t\t\t{carts.map(product => <CardProductList product={product} key={product.id}\n\t\t\t\t\t\t\t\tremoveFromCart={() => cartDispacth({ type: REMOVE_FROM_CART, payload: product })}\n\t\t\t\t\t\t\t\taddQuantity={() => cartDispacth({ type: ADD_QUANTITY, payload: product })}\n\t\t\t\t\t\t\t\tdecreaseQuantity={() => cartDispacth({ type: DECREMENT_QUANTITY, payload: product })} />)}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<h3 className=\"mt-4 mb-2\">\n\t\t\t\t\t\t\tItems in Cart: <strong>{items}</strong> | Total Cost: <strong>{formatNumber.format(total)}</strong>\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<button className=\"text-blue-500\" onClick={() => cartDispacth({ type: RESET_CART })}>Remove All Items</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t:\n\t\t\t\t\t<EmptyCart message=\"Your cart is empty.\" />\n\t\t\t}\n\t\t</>\n\t)\n}\n\nexport default Cart"],"sourceRoot":""}